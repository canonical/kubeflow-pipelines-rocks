# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
skipsdist = True
skip_missing_interpreters = True
envlist = unit, sanity, integration

[testenv]
setenv =
    PYTHONPATH={toxinidir}
    PYTHONBREAKPOINT=ipdb.set_trace
    CHARM_REPO=https://github.com/canonical/kfp-operators.git
    CHARM_BRANCH=main
    LOCAL_CHARM_DIR=charm_repo

[testenv:pack]
passenv = *
allowlist_externals =
    rockcraft
commands =
    rockcraft pack

[testenv:export-to-docker]
passenv = *
allowlist_externals =
    bash
    skopeo
    yq
commands =
    # pack rock and export to docker
    bash -c 'NAME=$(yq eval .name rockcraft.yaml) && \
             VERSION=$(yq eval .version rockcraft.yaml) && \
             ARCH=$(yq eval ".platforms | keys | .[0]" rockcraft.yaml) && \
             ROCK="$\{NAME\}_$\{VERSION\}_$\{ARCH\}.rock" && \
             DOCKER_IMAGE=$NAME:$VERSION && \\
             echo "Exporting $ROCK to docker as $DOCKER_IMAGE" && \
             skopeo --insecure-policy copy oci-archive:$ROCK docker-daemon:$DOCKER_IMAGE'

[testenv:sanity]
passenv = *
allowlist_externals = 
    echo
commands =
    # TODO: Implement sanity tests
    echo "WARNING: This is a placeholder test - no test is implemented here."

[testenv:integration]
passenv = *
allowlist_externals =
    echo
    bash
    git
    rm
    tox
deps =
    juju<4.0
    pytest
    pytest-operator
    ops
commands =
    echo "WARNING: This is a placeholder test - no test is implemented here."
    # Below is commented out due to https://github.com/canonical/pipelines-rocks/issues/61
    # we should remove above line and uncomment the below, once this is fixed.
    ; # clone related charm
    ; rm -rf {env:LOCAL_CHARM_DIR}
    ; git clone --branch {env:CHARM_BRANCH} {env:CHARM_REPO} {env:LOCAL_CHARM_DIR}
    ; # upload rock to docker and microk8s cache, replace charm's container with local rock reference
    ; bash -c 'NAME=$(yq eval .name rockcraft.yaml) && \
    ;          VERSION=$(yq eval .version rockcraft.yaml) && \
    ;          DOCKER_IMAGE=$NAME:$VERSION && \
    ;          docker save $DOCKER_IMAGE > $DOCKER_IMAGE.tar && \
    ;          sudo microk8s ctr image import $DOCKER_IMAGE.tar --digests=true && \
    ;          yq e -i ".resources.oci-image.upstream-source=\"$DOCKER_IMAGE\"" {env:LOCAL_CHARM_DIR}/charms/kfp-viz/metadata.yaml'
    ; # run bundle integration tests with rock
    ; tox -c {env:LOCAL_CHARM_DIR} -e bundle-integration-v2 -- --model kubeflow
